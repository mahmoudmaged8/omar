on:
  push:
    branches:
      - main
env:
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'us-east-1'
  CODEPIPELINE_NAME: "${{ github.workflow }}"
  PIPLINE_NAME: moblie-api

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Debug Environment
        run: |
          echo "PHP Version:"
          php --version
          echo "Composer Version:"
          composer --version
          echo "Environment Variables:"
          printenv
          echo "Current Directory:"
          pwd
          echo "Directory Listing:"
          ls -la

      - name: Build
        run: |
          echo ${{env.CODEPIPELINE_NAME}}
          php --version
          # rm -f composer.lock
          composer install
          cp .env.example .env
          php artisan key:generate
          yes | php artisan jwt:secret

      - name: Unit test
        run: |
          echo "Unit test started..."
          php artisan test
          echo "Unit test finished."
        continue-on-error: true

      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@v1.0.0
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #   continue-on-error: true

  publish-to-aws:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Publish to AWS
        run: |
          aws configure set aws_access_key_id "${{ env.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ env.AWS_SECRET_ACCESS_KEY }}"
          aws configure set region "${{ env.AWS_REGION }}"
          aws codepipeline enable-stage-transition --pipeline-name ${{ env.PIPLINE_NAME }} --stage-name Deploy --transition-type Inbound
          aws codepipeline disable-stage-transition --pipeline-name ${{ env.PIPLINE_NAME }} --stage-name Deploy --transition-type Inbound --reason "Disabling transition for maintenance"
